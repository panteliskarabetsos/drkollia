"use client";

import { useEffect, useState } from "react";

import { useRouter } from "next/navigation";
import { supabase } from "../lib/supabaseClient";
import { ChevronDown, ArrowLeft, ScrollText } from "lucide-react";

const faqs = [
  {
    question: "Πώς μπορώ να καταχωρήσω ραντεβού;",
    answer:
      "Μεταβείτε στη σελίδα «Ραντεβού» και πατήστε το κουμπί + που βρίσκεται επάνω δεξιά. Στη συνέχεια, μπορείτε είτε να αναζητήσετε έναν ήδη καταχωρημένο ασθενή πληκτρολογώντας το όνομα, το τηλέφωνο, το email ή το ΑΜΚΑ του, είτε να πατήσετε στο κουμπί «Νέος Ασθενής» για να προσθέσετε καινούργιο. Αφού επιλέξετε την επιθυμητή ημερομηνία, τον λόγο επίσκεψης και την ώρα, πατήστε Καταχώρηση για να ολοκληρώσετε τη διαδικασία. Ο ασθενής θα λάβει αυτόματα email επιβεβαίωσης.",
  },
  {
    question: "Πως μπορώ να ακυρώσω ραντεβού;",
    answer:
      "Μπορείτε να ακυρώσετε οποιδήποτε ραντεβού από τη σελίδα «Ραντεβού». Μετα την ακύρωση, ο ασθενής θα ενημερωθεί αυτόματα μέσω email.",
  },
  {
    question: "Πώς προσθέτω νέο ασθενή;",
    answer:
      "Για να προσθέσετε νέο ασθενή, μεταβείτε στη σελίδα «Ασθενείς» και πατήστε το κουμπί «Νέος Ασθενής». Συμπληρώστε τα απαιτούμενα πεδία και πατήστε 'Δημιουργία Ασθενή'. Στην σελίδα καταχώρησης ασθενούς μπορείτε να καταχωρήσετε όλες τις πληροφορίες του ασθενούς. Νέος ασθενής επίσης δημιουργείται απο την σελίδα «Ραντεβού» όταν καταχωρείτε νέο ραντεβού και επιλέγετε 'Νέος Ασθενής. ",
  },
  {
    question: "Πώς μπορώ να δημιουργήσω νέο λογαριασμό διαχειριστή;",
    answer:
      "Για να δημιουργήσετε νέο λογαριασμό διαχειριστή, μεταβείτε στον πίνακα διαχείρησης, έπειτα επιλέξτε το κουμπί 'Πρόσβαση'. Στην σελίδα διαχείρηση διαχειριστών πατήστε το κουμπί «Νέος Διαχειριστής». Συμπληρώστε τα απαιτούμενα πεδία και πατήστε 'Δημιουργία Λογαριασμού'. Υπενθυμίζεται ότι μόνο οι διαχειριστές μπορούν να δημιουργούν νέους λογαριασμούς διαχειριστών.",
  },
  {
    question: "Πότε στέλνονται αυτοματοποιημένα email στον ασθενή;",
    answer:
      "Το σύστημα στέλνει αυτοματοποιημένα email στον ασθενή μόνο όταν καταχωρείται ένα νέο ραντεβού ή όταν ακυρώνεται υπάρχον ραντεβού. Αυτά τα email περιλαμβάνουν λεπτομέρειες για το ραντεβού και οδηγίες για την επίσκεψη. Επίσης μια μέρα πριν το ραντεβού, ο ασθενής λαμβάνει υπενθύμιση μέσω email για το επερχόμενο ραντεβού του. ",
  },
  {
    question: "Πώς μπορώ να δω το ιστορικό επισκέψεων ενός ασθενούς;",
    answer: (
      <span>
        Στη σελίδα «Ασθενείς» πατήστε στο εικονίδιο{" "}
        <ScrollText className="inline w-4 h-4 text-gray-600" /> (Ιστορικό) δίπλα
        στον ασθενή. Εκεί θα δείτε όλες τις προηγούμενες επισκέψεις με
        ημερομηνία, λόγο επίσκεψης και σημειώσεις.
      </span>
    ),
  },
  {
    question: "Πώς μπορώ να σταματήσω προσωρινά να δέχομαι ραντεβού;",
    answer:
      "Στη σελίδα «Πρόγραμμα Ιατρείου» απενεργοποιήστε τον διακόπτη «Δεχόμαστε νέα ραντεβού». Ο ασθενής δεν θα μπορεί να κλείσει νέο ραντεβού μέχρι να τον ενεργοποιήσετε ξανά.",
  },
  {
    question: "Τι είναι οι Εξαιρέσεις στο πρόγραμμα ιατρείου;",
    answer:
      "Οι «Εξαιρέσεις» χρησιμοποιούνται για να δηλώσετε ημέρες ή ώρες κατά τις οποίες το ιατρείο δεν θα δέχεται ραντεβού, ανεξάρτητα από το βασικό εβδομαδιαίο πρόγραμμα. " +
      "Μπορείτε να τις χρησιμοποιήσετε για περιπτώσεις όπως αργίες, διακοπές, έκτακτα περιστατικά ή όταν θέλετε να κλείσετε συγκεκριμένα χρονικά διαστήματα. " +
      "Αφού καταχωρηθεί μια εξαίρεση, το σύστημα θα αποτρέπει αυτόματα την κράτηση ραντεβού σε αυτές τις ημερομηνίες ή ώρες.",
  },
  {
    question: "Πώς μπορώ να αλλάξω το ωράριο του ιατρείου;",
    answer:
      "Μεταβείτε στη σελίδα «Πρόγραμμα Ιατρείου» από το μενού διαχείρισης. Στην ενότητα «Βασικό Εβδομαδιαίο Πρόγραμμα» μπορείτε να προσθέσετε τις ώρες λειτουργίας για κάθε ημέρα, εισάγωντας χρονικά διαστήματα. " +
      "Για προσωρινές αλλαγές (π.χ. διακοπές, έκτακτα ρεπό), χρησιμοποιήστε την ενότητα «Εξαιρέσεις» για να μπλοκάρετε συγκεκριμένες ημερομηνίες ή ώρες. Οι αλλαγές εφαρμόζονται αυτόματα στο σύστημα κρατήσεων και επηρεάζουν τη διαθεσιμότητα ραντεβού. Αν θέλετε να αλλάξετε το ωράριο για συγκεκριμένες ημέρες, μπορείτε να προσθέσετε εξαιρέσεις για αυτές τις ημέρες. Αν προσθέσετε εξαίρεση σε μέρα ή ωρα με προγραμματισμένο ραντεβού και δεν μπορείτε να το εξυπηρετήσετε, θα πρέπει να το ακυρώσετε χειροκίνητα.",
  },
];

export default function HelpPage() {
  const [openIndex, setOpenIndex] = useState(null);
  const [sessionChecked, setSessionChecked] = useState(false);
  const [sessionExists, setSessionExists] = useState(false);
  const router = useRouter();

  useEffect(() => {
    const checkAuth = async () => {
      const {
        data: { session },
      } = await supabase.auth.getSession();

      if (!session) {
        router.replace("/login");
      } else {
        setSessionExists(true);
      }
      setSessionChecked(true);
    };
    checkAuth();
  }, [router]);

  const toggleFAQ = (index) => setOpenIndex(openIndex === index ? null : index);

  if (!sessionChecked) {
    return (
      <main className="min-h-screen flex items-center justify-center">
        Έλεγχος πρόσβασης...
      </main>
    );
  }

  if (!sessionExists) return null; // redirected to /login

  return (
    <main className="min-h-screen bg-[#fafafa] text-[#333] font-sans py-26 px-4">
      <div className="max-w-3xl mx-auto">
        <button
          onClick={() => router.back()}
          className="flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 mb-6 transition-colors"
        >
          <ArrowLeft className="w-4 h-4" />
          Επιστροφή
        </button>
        <h1 className="text-3xl font-bold text-center mb-8">
          Συχνές Ερωτήσεις (FAQ)
        </h1>
        <div className="space-y-4">
          {faqs.map((faq, index) => (
            <div
              key={index}
              className="border border-gray-200 rounded-lg bg-white shadow-sm"
            >
              <button
                onClick={() => toggleFAQ(index)}
                className="w-full flex justify-between items-center p-4 text-left"
              >
                <span className="font-medium">{faq.question}</span>
                <ChevronDown
                  className={`w-5 h-5 transition-transform ${
                    openIndex === index ? "rotate-180" : ""
                  }`}
                />
              </button>
              {openIndex === index && (
                <div className="px-4 pb-4 text-gray-600">{faq.answer}</div>
              )}
            </div>
          ))}
        </div>
      </div>
    </main>
  );
}
